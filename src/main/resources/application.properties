
#spring.datasource.url=jdbc:mysql://localhost:3306/db_example
spring.datasource.url= jdbc:postgresql://localhost:5432/ocm
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.username=postgres
spring.datasource.password=123456

#Hib Prop
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto= update
#hibernate.hbm2ddl.jdbc_metadata_extraction_strategy = individually

#
spring.datasource.tomcat.max-wait= 20000
spring.datasource.tomcat.max-active= 50
spring.datasource.tomcat.max-idle= 20
spring.datasource.tomcat.min-idle= 15




server.port=7090

#set SPRING_PROFILES_ACTIVE=local



spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp
spring.jpa.show-sql=true
spring.messages.basename=validation

#spring.queries.users-query=select email, password, active from user where username=?
#spring.queries.roles-query=select u.username, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

#spring.security.user.name = user
#spring.security.user.password = 3